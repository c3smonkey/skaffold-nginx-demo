{"ast":null,"code":"import _objectSpread from \"/Users/morpheus/dev/frontend/skaffold-nginx-demo/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nvar _jsxFileName = \"/Users/morpheus/dev/frontend/skaffold-nginx-demo/src/app/bg/BgDeployment.js\";\nimport React, { Component } from \"react\";\nimport { Alert } from \"reactstrap\";\nimport imgA from \"./blue-green-1.png\";\nimport imgB from \"./blue-green-2.jpg\";\nexport default class BgDeployment extends Component {\n  constructor(props) {\n    super(props);\n\n    this.fetchData = () => {\n      this.incrementCount();\n      this.setState(_objectSpread(_objectSpread({}, this.state), {}, {\n        isFetching: true\n      }));\n      fetch(this.props.service_url).then(response => response.json()).then(result => this.setState({\n        actuator: result,\n        isFetching: false\n      })).catch(e => console.log(e));\n    };\n\n    this.state = {\n      count: 0\n    };\n  }\n\n  componentDidMount() {\n    this.fetchData();\n    this.timer = setInterval(() => this.fetchData(), 1000);\n  }\n\n  componentWillUnmount() {\n    this.timer = null;\n  }\n\n  incrementCount() {\n    this.setState({\n      count: this.state.count + 1\n    });\n  }\n\n  // https://dev.w3.org/html5/html-author/charref\n  // &#8216;  ' \n  // &#8220;  \"\n  // &#123;   {\n  // &#125;   }\n  render() {\n    if (!this.state.actuator) return /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 38\n      }\n    }, \"Loading...\");\n    return /*#__PURE__*/React.createElement(\"div\", {\n      id: \"layout-content\",\n      className: \"layout-content-wrapper\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"panel-list\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }\n    }, \"Switch router : \", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(\"code\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }\n    }, \"oc patch route/bluegreen -p \", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 39\n      }\n    }), \"'{\\\"spec\\\":{\\\"to\\\":{\\\"name\\\":\\\"\", \"\".concat(this.state.actuator.git.branch === \"feature2\" ? \"feature1\" : \"feature2\"), \"\\\"}}}'\")), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }\n    }, \"\\xA0\"), /*#__PURE__*/React.createElement(Alert, {\n      color: \"\".concat(this.state.actuator.git.branch === \"feature2\" ? \"success\" : \"primary\"),\n      className: \"code\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 11\n      }\n    }, \"Hit service \", /*#__PURE__*/React.createElement(\"i\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 28\n      }\n    }, this.state.actuator.build.artifact, \" \")), \"  \", this.state.count, \" times. \", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 104\n      }\n    }), \"Version : \", /*#__PURE__*/React.createElement(\"i\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 26\n      }\n    }, \" \", this.state.actuator.build.version, \" \"))), /*#__PURE__*/React.createElement(\"img\", {\n      src: \"\".concat(this.state.actuator.git.branch === \"feature2\" ? imgB : imgA),\n      width: \"400\",\n      height: \"200\",\n      alt: \"ab\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 11\n      }\n    })));\n  }\n\n}","map":{"version":3,"sources":["/Users/morpheus/dev/frontend/skaffold-nginx-demo/src/app/bg/BgDeployment.js"],"names":["React","Component","Alert","imgA","imgB","BgDeployment","constructor","props","fetchData","incrementCount","setState","state","isFetching","fetch","service_url","then","response","json","result","actuator","catch","e","console","log","count","componentDidMount","timer","setInterval","componentWillUnmount","render","git","branch","build","artifact","version"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,KAAT,QAAsB,YAAtB;AAEA,OAAOC,IAAP,MAAiB,oBAAjB;AACA,OAAOC,IAAP,MAAiB,oBAAjB;AAGA,eAAe,MAAMC,YAAN,SAA2BJ,SAA3B,CAAqC;AAElDK,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SAqBnBC,SArBmB,GAqBP,MAAM;AAChB,WAAKC,cAAL;AACA,WAAKC,QAAL,iCAAmB,KAAKC,KAAxB;AAA+BC,QAAAA,UAAU,EAAE;AAA3C;AACAC,MAAAA,KAAK,CAAC,KAAKN,KAAL,CAAWO,WAAZ,CAAL,CACGC,IADH,CACQC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADpB,EAEGF,IAFH,CAEQG,MAAM,IAAI,KAAKR,QAAL,CAAc;AAAES,QAAAA,QAAQ,EAAED,MAAZ;AAAoBN,QAAAA,UAAU,EAAE;AAAhC,OAAd,CAFlB,EAGGQ,KAHH,CAGSC,CAAC,IAAIC,OAAO,CAACC,GAAR,CAAYF,CAAZ,CAHd;AAID,KA5BkB;;AAEjB,SAAKV,KAAL,GAAa;AACXa,MAAAA,KAAK,EAAE;AADI,KAAb;AAGD;;AACDC,EAAAA,iBAAiB,GAAG;AAClB,SAAKjB,SAAL;AACA,SAAKkB,KAAL,GAAaC,WAAW,CAAC,MAAM,KAAKnB,SAAL,EAAP,EAAyB,IAAzB,CAAxB;AACD;;AACDoB,EAAAA,oBAAoB,GAAG;AACrB,SAAKF,KAAL,GAAa,IAAb;AACD;;AAGDjB,EAAAA,cAAc,GAAE;AACd,SAAKC,QAAL,CAAc;AACZc,MAAAA,KAAK,EAAE,KAAKb,KAAL,CAAWa,KAAX,GAAmB;AADd,KAAd;AAGD;;AAWD;AACA;AACA;AACA;AACA;AAGAK,EAAAA,MAAM,GAAG;AACP,QAAI,CAAC,KAAKlB,KAAL,CAAWQ,QAAhB,EAA0B,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAP;AAE1B,wBACE;AAAK,MAAA,EAAE,EAAC,gBAAR;AAAyB,MAAA,SAAS,EAAC,wBAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wCACgB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADhB,eAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oDAC8B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAD9B,+CAE6C,KAAKR,KAAL,CAAWQ,QAAX,CAAoBW,GAApB,CAAwBC,MAAxB,KAAmC,UAAnC,GAAgD,UAAhD,GAA6D,UAF1G,YAFA,CADA,eAQA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cARA,eASE,oBAAC,KAAD;AAAO,MAAA,KAAK,YAAK,KAAKpB,KAAL,CAAWQ,QAAX,CAAoBW,GAApB,CAAwBC,MAAxB,KAAmC,UAAnC,GAAgD,SAAhD,GAA4D,SAAjE,CAAZ;AAA0F,MAAA,SAAS,EAAC,MAApG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oCACc;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAI,KAAKpB,KAAL,CAAWQ,QAAX,CAAoBa,KAApB,CAA0BC,QAA9B,MAAH,CADd,QACoE,KAAKtB,KAAL,CAAWa,KAD/E,2BAC6F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAD7F,6BAEY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAK,KAAKb,KAAL,CAAWQ,QAAX,CAAoBa,KAApB,CAA0BE,OAA/B,MAAH,CAFZ,CATF,eAaE;AAAK,MAAA,GAAG,YAAK,KAAKvB,KAAL,CAAWQ,QAAX,CAAoBW,GAApB,CAAwBC,MAAxB,KAAmC,UAAnC,GAAgD3B,IAAhD,GAAuDD,IAA5D,CAAR;AAA4E,MAAA,KAAK,EAAC,KAAlF;AAAwF,MAAA,MAAM,EAAC,KAA/F;AAAsG,MAAA,GAAG,EAAC,IAA1G;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAbF,CADF,CADF;AAmBD;;AA7DiD","sourcesContent":["import React, { Component } from \"react\"\nimport { Alert } from \"reactstrap\"\n\nimport imgA from \"./blue-green-1.png\"\nimport imgB from \"./blue-green-2.jpg\"\n\n\nexport default class BgDeployment extends Component {\n  \n  constructor(props) {\n    super(props)\n    this.state = {\n      count: 0\n    }\n  }\n  componentDidMount() {\n    this.fetchData()\n    this.timer = setInterval(() => this.fetchData(), 1000)\n  }\n  componentWillUnmount() {\n    this.timer = null\n  }\n\n  \n  incrementCount(){\n    this.setState({\n      count: this.state.count + 1\n    })\n  }\n\n  fetchData = () => {\n    this.incrementCount()\n    this.setState({ ...this.state, isFetching: true })\n    fetch(this.props.service_url)\n      .then(response => response.json())\n      .then(result => this.setState({ actuator: result, isFetching: false }))\n      .catch(e => console.log(e))\n  }\n\n  // https://dev.w3.org/html5/html-author/charref\n  // &#8216;  ' \n  // &#8220;  \"\n  // &#123;   {\n  // &#125;   }\n\n  \n  render() {\n    if (!this.state.actuator) return <p>Loading...</p>\n \n    return (    \n      <div id=\"layout-content\" className=\"layout-content-wrapper\">\n        <div className=\"panel-list\"> \n        <p>  \n        Switch router : <br/>\n        <code>\n          oc patch route/bluegreen -p <br/>\n          '&#123;\"spec\":&#123;\"to\":&#123;\"name\":\"{`${this.state.actuator.git.branch === \"feature2\" ? \"feature1\" : \"feature2\"}`}\"&#125;&#125;&#125;'\n        </code> \n        </p>\n        <div>&nbsp;</div>\n          <Alert color={`${this.state.actuator.git.branch === \"feature2\" ? \"success\" : \"primary\"}`} className=\"code\">\n            Hit service <i><b>{this.state.actuator.build.artifact} </b></i>  {this.state.count} times. <br/>\n            Version : <i><b> {this.state.actuator.build.version} </b></i>\n          </Alert>\n          <img src={`${this.state.actuator.git.branch === \"feature2\" ? imgB : imgA}`} width=\"400\" height=\"200\"  alt=\"ab\" />\n        </div>\n      </div>\n    )\n  }\n}\n\n"]},"metadata":{},"sourceType":"module"}